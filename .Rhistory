View(db)
View(dbot)
db.get_related_bots('election2016'
)
db.get_related_bots('election2016')
dbot=import("debot")
db = dbot$DeBot('YocR3mKAc7U6hjKZrNnOCk2jjnWrqgSfwWYo8yOb')#This is my API key
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
library(XML)
#path_to_python <- "/usr/local/bin/python3.6"
path_to_python <- "/Library/Frameworks/Python.framework/Versions/3.6/bin/python3.6"
use_python(path_to_python)
dbot=import("debot")
db = dbot$DeBot('YocR3mKAc7U6hjKZrNnOCk2jjnWrqgSfwWYo8yOb')#This is my API key
gbots=htmlParse(db$get_related_bots('GOPTaxScam'))
db.get_related_bots('election2016')
db
db.get_related_bots('election2016')
sessionInfo()
py_config()
tmls <-get_timelines(usersBots, n=1, retryonratelimit = TRUE)
library(rtweet)
tmls <-get_timelines(usersBots, n=1, retryonratelimit = TRUE)
userbots <- botAcctlist$screenName
tmls <-get_timelines(usersBots, n=1, retryonratelimit = TRUE)
userBots <- botAcctlist$screenName
tmls <-get_timelines(usersBots, n=1, retryonratelimit = TRUE)
usersBots <- botAcctlist$screenName
tmls <-get_timelines(usersBots, n=1, retryonratelimit = TRUE)
warnings()
#bots=htmlParse(db$get_related_bots('election2016'))#Change 'election2016' to any other topic of your interest
#cbots=htmlParse(db$get_related_bots('Charlottesville'))
gbots=htmlParse(db$get_related_bots('NetNeutrality'))
rm(gbots)
gbots=htmlParse(db$get_related_bots('netneutrality'))
rm(gbots)
GTS <- search_tweets(
"#GOPTaxScam", n = 18000, include_rts = FALSE
)
GTS <- search_tweets(
"#GOPTaxScam", n = 18000, include_rts = FALSE
)
summary(GTS)
str(GTS)
CTV <- search_tweets(
"#Charlottesville", n = 18000, include_rts = FALSE
)
ts_plot(CTV)
botAcctlist$screenName[1:10]
tmls <- get_timelines(botAcctlist$screenName[1:10], n = 2)
tmls
tmls <- get_timelines(botAcctlist$screenName[1:100], n = 1)
head(tmls)
rm(tmls)
tmls <- get_timelines(botAcctlist$screenName[1:100], n = 1)
head(tmls)
warnings()
time()
head(tmls)
tmls <- get_timelines(botAcctlist$screenName[1:100], n = 1)
warnings()
head(tmls)
GTS
gts <- parse_stream("tweetsabtGTS.json")
head(gts)
#bots=htmlParse(db$get_related_bots('election2016'))#Change 'election2016' to any other topic of your interest
cbots=htmlParse(db$get_related_bots('Charlottesville'))
rm(cbots)
rm(userBots)
rm(userbots)
rt <- stream_tweets("")
str(rt)
stream_tweets(
"netneutrality,openmtgfcc",
timeout = 60 * 60,
file_name = "tweetsabtNN.json",
parse = FALSE
)
netNeutral <- parse_stream("tweetsabtNN.json")
View(netNeutral)
users_data(netNeutral)
ts_plot(netNeutral)
tmls <- get_timelines(botAcctlist$screenName[1:100], n = 1)
tmls
warnings()
tmls <- get_timelines(netNeutral$screen_name, n = 1)
#bots=htmlParse(db$get_related_bots('election2016'))#Change 'election2016' to any other topic of your interest
#cbots=htmlParse(db$get_related_bots('Charlottesville'))
gbots=htmlParse(db$get_related_bots('NetNeutrality'))
rm(gbots)
tmls <- get_timelines(netNeutral$screen_name, n = 1)
netNeutral$text
tmls <- get_timelines(netNeutral$screen_name, n = 2)
tmls
warnings()
tmls <- get_timelines(botAcctlist$screenName[1:100], n = 2)
warnings()
tmls <- get_timelines(botAcctlist$screenName, n = 2)
warnings()
jkr <- get_favorites("jk_rowling", n = 3000)
sessionInfo()
jkr <- get_favorites("jk_rowling", n = 3000)
usrs <- search_users("#rstats", n = 1000)
usrs
sessionInfo()
library(twitteR)
result <- searchTwitter("Michigan", 10)
retach(twitteR)
detach(twitteR)
detach("twitteR")
detach("package:twitteR", unload=TRUE)
jkr <- get_favorites("jk_rowling", n = 3000)
usrs
str(usrs)
jkr <- get_favorites("jk_rowling", n = 3000)
tmls <- get_timelines(c("cnn", "BBCWorld", "foxnews"), n = 3200)
sessionInfo()
library(httr)
View(botAcctlist)
lastTweet <- GET https://api.twitter.com/1.1/statuses/show.json?id=botAcctlist$id
lastTweet <- GET(https://api.twitter.com/1.1/statuses/show.json?id=botAcctlist$id)
?GET
lastTweet <- GET("https://api.twitter.com/1.1/statuses/show.json?id=botAcctlist$id")
View(lastTweet)
lastTweet <- botAcctlist %>%
GET("GET https://api.twitter.com/1.1/statuses/show.json?id=id")
GET("https://api.twitter.com/1.1/statuses/show.json?id=id")
View(lastTweet)
parse_url(lastTweet$content)
??httr
rm(lastTweet)
lastTweet <- data.frame()
lastTweet$screenName <- botAcctlist$screenName
lastTweet
rm(lastTweet)
lastTweet$screenName <- botAcctlist$screenName
lastTweet$screenName <- data.frame(botAcctlist$screenName)
View(tmls)
tmlns <- get_timelines(botAcctlist$screenName, n = 5)
warnings()
rm(tmls)
GET("https://api.twitter.com/1.1/statuses/show.json?id=1973517494")
View(twitter_token)
rm(djt)
rm(db)
rm(dbot)
View(gts)
str(tweeters)
tweet <- GET("https://api.twitter.com/1.1/statuses/show.json?id=1973517494")
content(tweet)
tweet <- GET("https://api.twitter.com/1.1/statuses/show.json?id=729571835512164352")
content(tweet)
tweet <- GET("https://api.twitter.com/1.1/statuses/show/210462857140252672.json")
content(tweet)
View(myapp)
myapp
oauth_endpoints("twitter")
myapp <- oauth_app("twitter",
key = "OHIL9V7v7LikVwie2Vc3ltRxz",
secret = "IMqsEB0p1H7JeBZ5qGMXZUjqhppwbLi2SZxCQFVga8c4TNCRu7")
twitter_token <- oauth1.0_token(oauth_endpoints("twitter"), myapp)
oauth_endpoints("twitter")
myapp <- oauth_app("twitter",
key = "OHIL9V7v7LikVwie2Vc3ltRxz",
secret = "IMqsEB0p1H7JeBZ5qGMXZUjqhppwbLi2SZxCQFVga8c4TNCRu7")
twitter_token <- oauth1.0_token(oauth_endpoints("twitter"), myapp)
req <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",
config(token = twitter_token))
req <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",
config(token = twitter_token))
stop_for_status(req)
content(req)
tweet <- GET("https://api.twitter.com/1.1/statuses/show/210462857140252672.json")
content(tweet)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'qkgJvUbFX70rNn1K4uq9NAuVs'
consumer_secret <- 'xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm'
access_token <- ' 1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74'
access_secret <- 'jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
sessionInfo()
library(ROAuth)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'qkgJvUbFX70rNn1K4uq9NAuVs'
consumer_secret <- 'xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm'
access_token <- ' 1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74'
access_secret <- 'jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
twitter_token <- oauth1.0_token(oauth_endpoints("twitter"), myapp)
req <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",
config(token = twitter_token))
tweet <- GET("https://api.twitter.com/1.1/statuses/show/210462857140252672.json")
content(tweet)
content(req)
View(req)
req[["content"]]
content(req)
twitter_token <- oauth1.0_token(oauth_endpoints("twitter"), myapp)
twitter_token <- oauth2.0_token(oauth_endpoints("twitter"), myapp)
refresh()
rm(conjja)
head(CTV)
head(CTV$text)
req <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",
config(token = twitter_token))
ts_plot(CTV)
saveRDS(CTV)
saveRDS(CTV, "capstone dataset/CTV")
str(CTV)
glimpse(CTV)
library(tidyverse)
glimpse(CTV)
sessionInfo()
rm(gts)
rm(GTS)
rm(netNeutral)
str(rt)
rm(rt)
?part
?pairs
names(shredDF)
head(tweetSrc)
names(shredDF)
head(shredDF)
head(appcount)
library(rpart)
?pnorm
str(CTV)
View(CTV)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'QpSBwPC1PwqUQ4eSMCVeXenDQ'
consumer_secret <- '39YRwPaXF9u3TCvjqFaElSxmEEe7xcUJTzg0M2oa3egutPa6B4'
access_token <- '1240280636-GFbqEWiGKiP17KmN4oyrFwdZwQBJEJA3BRy2TmW'
access_secret <- 'vsnTNryz83p0XS4rSz6dwOmGRf0SZC2pPtxGnAkvUikSR'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
library(caret)
library(igraph)
library(twitteR)
library(streamR)
library(RNeo4j)
library(tidyverse)
library(reticulate)
library(XML)
library(httr)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'QpSBwPC1PwqUQ4eSMCVeXenDQ'
consumer_secret <- '39YRwPaXF9u3TCvjqFaElSxmEEe7xcUJTzg0M2oa3egutPa6B4'
access_token <- '1240280636-GFbqEWiGKiP17KmN4oyrFwdZwQBJEJA3BRy2TmW'
access_secret <- 'vsnTNryz83p0XS4rSz6dwOmGRf0SZC2pPtxGnAkvUikSR'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'z2XINJQ79OFJ72WLu1lU8JK9B'
consumer_secret <- 'DTnH4j0brOMlU9ns0OEFo2miJFYcyRBmbqPCQFnM5uROUA88p7'
access_token <- '749110690833575936-HMdJdmQBqs14AZRQ0gpc1V0czMXYccU'
access_secret <- 'lyUgbE0v5N1bMVBDw07kNmz2JfrUFMLOT38D0hWWpGbHM'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
sessionInfo()
library(rtweet)
vignette("rtweet")
usr_df <- lookup_users(unlistedBots)
tweets_data(usr_df)
View(usr_df)
names(usr_df)
names(botAcctlist)
names(botlist)
names(botDS)
names(CTV)
class(CTV$status_id)
class(as.list(CTV$status_id))
tw <- lookup_statuses(as.list(CTV$status_id))
st <- as.list(CTV$status_id)
class(st)
tw <- lookup_statuses(st)
st
tw <- lookup_statuses(st[])
flatten(tw)
flatten(st)
tw <- lookup_statuses(st[[]])
rm(tw)
head(st)
tw <- lookup_statuses(st[[]][])
rm(tw)
flatten(st)
head(flatten(st))
head(st)
flat <- st[[]][1]
rm(flat)
rm(st)
st <- CTV$status_id[[]][1]
st <- CTV$status_id[[1]
st <- CTV$status_id[1]
rm(st)
st <- unlist(CTV$status_id)
st
tw <- lookup_statuses(st)
users_data(tw)
ud <- users_data(tw)
View(ud)
?lastStatus
ut <- userTimeline(unlistedBots, n=1)
iud <- users_data(tw)
rm(iud)
ut <- userTimeline(unlistedBots, n=2)
??twitteR
sessionInfo()
library(GGally)
data("twitter_spambots")
rm(twitter_spambots)
View(usrs)
ut <- userTimeline(unlistedBots, n=2)
ud <- map(unlistedBots[], ~searchTwitteR(.x, resultType = "recent", n=2))
View(ud)
udDF <- twListToDF(flatten(ud))
View(udDF)
latestStat <- lookupUsers(unlistedBots)
View(latestStat)
lastStatDF <- twListToDF(latestStat)
View(lastStatDF)
uDF %>%
View(udDF)
group_by(screenName)
uDF %>%
group_by(screenName)
udDF %>% group_by(screenName)
udDF %>% group_by(screenName) %>% desc(created)
View(lastStatDF)
utLast <- userTimeline(unlistedBots, n=1)
udDF %>% group_by(screenName) %>% unique(screenName)
sorteduDF <- udDF %>% group_by(screenName)
View(sorteduDF)
orderedUDF <- data[order(udDF$screenName,)]
orderedUDF <- data[order(udDF$screenName), ]
orderedUDF <- data[order(udDF$screenName),]
orderedUDF <- data[order(udDF$screenName)]
aggregate(udDF$created ~ udDF$screenName, udDF, head, 1)
lastTweet <- aggregate(udDF$created ~ udDF$screenName, udDF, head, 1)
names(botDS)
?rbind
?join
left_join(botDS, lastTweet)
?bind
lastTweet
View(lastTweet)
right_join(botDS, lastTweet)
left_join(botDS, lastTweet)
left_join(botDS, lastTweet, by = screenName)
?left_join
left_join(botDS, lastTweet, by = "screenName")
columnnames <- names(lastTweet)
columnnames
columnnames[1] <- "screenName"
columnnames[2] <- "created"
colnames(lastTweet) <- columnnames
left_join(botDS, lastTweet, by = "screenName")
columnnames[2] <- "lastStatusCreated"
left_join(botDS, lastTweet, by = "screenName")
colnames(lastTweet) <- columnnames
left_join(botDS, lastTweet, by = "screenName")
botDS <- left_join(botDS, lastTweet, by = "screenName")
names(botDS)
names(latestStat)
names(ud)
names(udDF)
names(lastStatDF)
botDS$statusesCount <- lastStatDF$statusesCount
View(lastStatDF)
utLast <- userTimeline(botDS$screenName, n=2)
utLast <- userTimeline(as.list(botDS$screenName), n=2)
utLast <- userTimeline(unlist(botDS$screenName), n=2)
unlist(botDS$screenName)
accts <- unlist(botDS$screenName)
utLast <- userTimeline(accts, n=2)
class(accts)
class(unlistedBots)
str(usrs)
names(usrs)
utLast <- userTimeline(accts, n=2)
utLast <- userTimeline(unlistedBots, n=2)
utLast <- userTimeline(accts, n=2)
botDS$screenName
unique(botDS$screenName)
accts <- unique(accts)
utLast <- userTimeline(accts, n=2)
searchTwitter("iphone")
utLast <- userTimeline(accts, n=2)
knitr::opts_chunk$set(echo = TRUE)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'qkgJvUbFX70rNn1K4uq9NAuVs'
consumer_secret <- 'xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm'
access_token <- ' 1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74'
access_secret <- 'jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'qkgJvUbFX70rNn1K4uq9NAuVs'
consumer_secret <- 'xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm'
access_token <- ' 1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74'
access_secret <- 'jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'qkgJvUbFX70rNn1K4uq9NAuVs'
consumer_secret <- 'xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm'
access_token <- ' 1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74'
access_secret <- 'jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'qkgJvUbFX70rNn1K4uq9NAuVs'
consumer_secret <- 'xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm'
access_token <- ' 1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74'
access_secret <- 'jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- 'z2XINJQ79OFJ72WLu1lU8JK9B'
consumer_secret <- 'DTnH4j0brOMlU9ns0OEFo2miJFYcyRBmbqPCQFnM5uROUA88p7'
access_token <- '749110690833575936-HMdJdmQBqs14AZRQ0gpc1V0czMXYccU'
access_secret <- 'lyUgbE0v5N1bMVBDw07kNmz2JfrUFMLOT38D0hWWpGbHM'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
utLast <- userTimeline(accts, n=2)
latestStat <- lookupUsers(accts)
utLast <- map(accts[], ~searchTwitteR(.x, resultType = "recent", n=2))
lastTweet <- aggregate(udDF$created ~ udDF$screenName, udDF, head, 1)
utLastDF <- twListToDF(utLast)
utLast
utLastDF <- twListToDF(flatten(utLast))
latestStatDF <- twListToDF(latestStat)
lastTweet <- aggregate(utLastDF$created ~ utLastDF$screenName, utLastDF, head, 1)
columnnames <- names(lastTweet)
names(botDS)
botDS <- botDS[1:12,]
names(botDS)
rm(botDS)
getwd()
botDS <- readRDS("capstone data/botDS")
botDS <- readRDS("capstone dataset/botDS")
left_join(botDS, lastTweet, by = "screenName")
names(lastTweet)
columnnames[1] <- "screenName"
columnnames[2] <- "created"
colnames(lastTweet) <- columnnames
left_join(botDS, lastTweet, by = "screenName")
botDS$statusesCount <- latestStatDF$statusesCount
accts <- unlist(botDS$screenName)
latestStat <- lookupUsers(accts)
latestStatDF <- twListToDF(latestStat)
botDS$statusesCount <- latestStatDF$statusesCount
accts
latestStatDF$screenName
latestStatDF %>%
botDS$screenName %in% latestStatDF$screenName
sum(botDS$screenName %in% latestStatDF$screenName)
botDS %>%
screenName %in% latestStatDF$screenName %>%
botDS$statusesCount <- latestStatDF$statusesCount
botDS %>%
botDS$screenName %in% latestStatDF$screenName %>%
botDS$statusesCount <- latestStatDF$statusesCount
botDS$screenName %in% latestStatDF$screenName %>%
botDS$statusesCount <- latestStatDF$statusesCount
names(botDS)
botDS <- botDS[,-4]
names(botDS)
names(latestStatDF)
botDS$statusesCount <- latestStatDF$statusesCount
botDS$screenName %in% latestStatDF$screenName %>%
botDS$statusesCount <- latestStatDF$statusesCount
names(botDS)
names(latestStatDF)
names(lastTweet)
str(lastTweet)
str(utLastDF)
utLastDF$screenName
unique(utLastDF$screenName)
?left_join
devtools::install_github("mkearney/rtweet")
install.packages("netrankr")
install.packages(c("chron", "data.tree", "dbplyr", "DRR", "elasticsearchr", "ellipse", "git2r", "Hmisc", "microbenchmark", "pbdZMQ", "pmml", "proxy", "RCurl", "rprojroot", "sf", "shinyjs", "sp", "testthis", "tidytext", "tigris", "units", "utf8", "viridis", "zoo"))
install.packages(c("git2r", "Hmisc", "sf"))
install.packages("rgdal")
install.packages(c("git2r", "Hmisc", "sf"))
install.packages("rgdal")
install.packages(c("git2r", "Hmisc", "sf"))
install.packages("rgdal")
install.packages(c("Hmisc", "sf"))
install.packages("rgdal", type = source())
install.packages("rgdal", type = source
install.packages("rgdal", type = source)
install.packages(c("Hmisc", "sf"))
install.packages(c("Hmisc", "reticulate", "sf"))
install.packages("rgdal")
install.packages(c("Hmisc", "reticulate", "sf"))
install.packages(c("Hmisc", "sf"))
install.packages("sf")
