sum(botDS$screenName %in% latestStatDF$screenName)
botDS %>%
screenName %in% latestStatDF$screenName %>%
botDS$statusesCount <- latestStatDF$statusesCount
botDS %>%
botDS$screenName %in% latestStatDF$screenName %>%
botDS$statusesCount <- latestStatDF$statusesCount
botDS$screenName %in% latestStatDF$screenName %>%
botDS$statusesCount <- latestStatDF$statusesCount
names(botDS)
botDS <- botDS[,-4]
names(botDS)
names(latestStatDF)
botDS$statusesCount <- latestStatDF$statusesCount
botDS$screenName %in% latestStatDF$screenName %>%
botDS$statusesCount <- latestStatDF$statusesCount
names(botDS)
names(latestStatDF)
names(lastTweet)
str(lastTweet)
str(utLastDF)
utLastDF$screenName
unique(utLastDF$screenName)
?left_join
devtools::install_github("mkearney/rtweet")
install.packages("netrankr")
install.packages(c("chron", "data.tree", "dbplyr", "DRR", "elasticsearchr", "ellipse", "git2r", "Hmisc", "microbenchmark", "pbdZMQ", "pmml", "proxy", "RCurl", "rprojroot", "sf", "shinyjs", "sp", "testthis", "tidytext", "tigris", "units", "utf8", "viridis", "zoo"))
install.packages(c("git2r", "Hmisc", "sf"))
install.packages("rgdal")
install.packages(c("git2r", "Hmisc", "sf"))
install.packages("rgdal")
install.packages(c("git2r", "Hmisc", "sf"))
install.packages("rgdal")
install.packages(c("Hmisc", "sf"))
install.packages("rgdal", type = source())
install.packages("rgdal", type = source
install.packages("rgdal", type = source)
install.packages(c("Hmisc", "sf"))
install.packages(c("Hmisc", "reticulate", "sf"))
install.packages("rgdal")
install.packages(c("Hmisc", "reticulate", "sf"))
install.packages(c("Hmisc", "sf"))
install.packages("sf")
devtools::install_github("r-spatial/sf")
install.packages("sf")
install.packages("rgdal")
install.packages("sf")
install.packages("rgdal", repos = "http://cran.us.r-project.org", type = "source")
install.packages("sf")
?oauth_endpoints
library(httr)
oauth_endpoints("twitter")
create_token(
app = Sys.getenv("TWITTER_APP"),
consumer_key = Sys.getenv("TWITTER_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_CONSUMER_SECRET")
) -> twitter_token
library(rtweet)
?create_token
create_token(
app = Sys.getenv("TWITTER_APP"),
consumer_key = Sys.getenv("TWITTER_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_CONSUMER_SECRET")
) -> twitter_token
library(devtools)
install_version("httr", version = "1.1.0", repos = "http://cran.us.r-project.org")
library(httr)
library(devtools)
install_version("httr", version = "1.1.0", repos = "http://cran.us.r-project.org")
library(httr)
install.packages("httr")
library(httr)
create_token(
app = Sys.getenv("TWITTER_APP"),
consumer_key = Sys.getenv("TWITTER_CONSUMER_KEY"),
consumer_secret = Sys.getenv("TWITTER_CONSUMER_SECRET")
) -> twitter_token
knitr::opts_chunk$set(echo = TRUE)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "qkgJvUbFX70rNn1K4uq9NAuVs"
consumerSecret <- "xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm"
accessToken <- "1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74"
accessTokenSecret <- "jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo"
handle <- "conjja"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
library(twitteR)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "qkgJvUbFX70rNn1K4uq9NAuVs"
consumerSecret <- "xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm"
accessToken <- "1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74"
accessTokenSecret <- "jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo"
handle <- "conjja"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
knitr::opts_chunk$set(echo = TRUE)
botAccts <- lookupUsers(newBotlist)
tootLast <- map(accts[], ~searchTwitteR(.x, resultType = "recent", n=2))
library(tidyverse)
tootLast <- map(accts[], ~searchTwitteR(.x, resultType = "recent", n=2))
twitter_token <- oauth1.0_token(oauth_endpoints("twitter"), myapp)
oauth_endpoints("twitter")
myapp <- oauth_app("twitter",
key = "qkgJvUbFX70rNn1K4uq9NAuVs",
secret = "xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm")
twitter_token <- oauth1.0_token(oauth_endpoints("twitter"), myapp)
req <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",
config(token = twitter_token))
req <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",
config(token = twitter_token))
View(req)
content(req)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "dMs3guHk4y6DDdztO0JDmUTqB"
consumerSecret <- "csna8h6XWQMd3ZppMBCUuNNXDTuBAVJLNK7QphZRCd5plkES0z"
accessToken <- "1240280636-PTXARRUrytYtijYXyPWKptD9cHSCMzlAujQkATI"
accessTokenSecret <- "uo8INEJbhhe43AIXfSs5veSZ6i7IHbh8Tn1LLlYTJqOm2"
handle <- "conjja"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
oauth_endpoints("twitter")
myapp <- oauth_app("twitter",
key = "qkgJvUbFX70rNn1K4uq9NAuVs",
secret = "xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm")
twitter_token <- oauth1.0_token(oauth_endpoints("twitter"), myapp)
twitter_token <- oauth1.0_token(oauth_endpoints, myapp)
oauth_endpoints("twitter")
myapp <- oauth_app("twitter",
key = "qkgJvUbFX70rNn1K4uq9NAuVs",
secret = "xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm")
twitter_token <- oauth1.0_token(oauth_endpoints, myapp)
req <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json",
config(token = twitter_token))
stop_for_status(req)
content(req)
unlist(content(req))
page(unlist(content(req)) )
install.packages(c("arules", "dwapi", "irlba", "pbapply", "pbdZMQ", "recipes", "rpart"))
library(insol)
install.packages("insol")
library(insol)
??ind=sol
??insol
?JDymd
JDymd(botDS$acct_created)
?julian
julian(botDS$acct_created, origin = as.Date("1970-01-01"))
julian(botDS$acct_created)
julian(botDS$acct_created, origin = as.Date("1970-01-01"))
botDS$julianCreated <- julian(botDS$acct_created, origin = as.Date("1970-01-01"))
anchorDate <- julian(2017-01-04)
anchorDate <- julian("2017-01-04 CST")
anchorDate <- julian("2017-01-04 10:00:00")
anchorDate <- julian(as.POSIXct("2017-01-04 10:00:00"))
anchorDate
julian(as.Date.POSIXct("2017-01-04 10:00:00"))
julian(as.POSIXct.date("2017-01-04 10:00:00"))
class(2017-01-04 10:00:00)
class(botDS$acct_created[1])
class(anchorDate)
as.integer(anchorDate)
anchorDate
as.integer(anchorDate) <- julian(as.POSIXct("2017-01-04 10:00:00"))
anchorDate <- as.integer(julian(as.POSIXct("2017-01-04 10:00:00")))
?as.integer
anchorDate
botDS$acct_age <- anchorDate - botDS$julianCreated
anchorDate - botDS$julianCreated
?round
round(botDS$acct_age)
sum(round(botDS$acct_age) < 0)
botDS$acct_age <- round(botDS$acct_age)
names(botDS)
botAcctlist$name
botAcctlist$name[1]
botDS$screenName[1]
botAcctlist$screenName[1]
botAcctlist$statusesCount[1]
botAcctlist$Count[1]
botAcctlist$mCount[1]
names(tootLast)
tootL
tootLast
tootLast[1]
class(tootLast)
sessionInfo()
library(twitteR)
tootDF <- twListToDF(tootLast)
names(botDS)
saveRDS(botDS, file = "capstone data/botDS20180112")
getwd()
ls()
saveRDS(botDS, file = "capstone dataset/botDS20180112")
knitr::opts_chunk$set(echo = TRUE)
botAccts <- lookupUsers(newBotlist)
newBotlist <- readRDS("capstone dataset/newBotlist")
botAccts <- lookupUsers(newBotlist)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "dMs3guHk4y6DDdztO0JDmUTqB"
consumerSecret <- "csna8h6XWQMd3ZppMBCUuNNXDTuBAVJLNK7QphZRCd5plkES0z"
accessToken <- "1240280636-PTXARRUrytYtijYXyPWKptD9cHSCMzlAujQkATI"
accessTokenSecret <- "uo8INEJbhhe43AIXfSs5veSZ6i7IHbh8Tn1LLlYTJqOm2"
handle <- "conjja"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
botAccts <- lookupUsers(newBotlist)
botAcctlist <- twListToDF(botAccts)
botDS$count <- botAcctlist$statusesCount
botAccts <- lookupUsers(botDS$screenName)
botAcctlist <- twListToDF(botAccts)
botDS$count <- botAcctlist$statusesCount
botDS %>% filter(botDS$screenName %in% botAcctlist$screenName) %>% botDS$Count <- botAcctlist$statusesCount
library(tidyverse)
botDS %>% filter(botDS$screenName %in% botAcctlist$screenName) %>% botDS$Count <- botAcctlist$statusesCount
botDS %>% filter(botDS$screenName %in% botAcctlist$screenName) %>% botDS$Count
botDS$Count
sum(is.na(botDS$Count))
511 - 164
botDS$count <- botAcctlist$statusesCount
unique(botDS$screenName)
filter(botDS$screenName %in% botAcctlist$screenName)
subset(botDS$screenName %in% botAcctlist$screenName)
select(botDS$screenName %in% botAcctlist$screenName)
filter(botDS$screenName[] %in% botAcctlist$screenName[])
system("~/.Rprofile")
help("Rprofile")
System("clear")
system("clear")
system(clear)
system("clear")
str(botDS)
install.packages(c("data.world", "digest", "fpc", "haven", "hexbin", "lava", "mgcv", "pillar"))
names(CTV)
CTV$hashtags
names(CTV)
names(groupedTweetsDF)
names(latestStat)
names(latestStatDF)
unique(botDS$screenName)
knitr::opts_chunk$set(echo = TRUE)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "qkgJvUbFX70rNn1K4uq9NAuVs"
consumerSecret <- "xOGEeIMUUTrCTkVwGXXwdu75kqVzEq2yzDJuZPrBwt9NfwwFJm"
accessToken <- "1240280636-lHi3fdKVZGNE6FsUlvY7y13RsqED0JQgmKY9f74"
accessTokenSecret <- "jaqKjy4O6O73rYzOxMSAlbqigZu4iaEClAestfrRBjBZo"
handle <- "conjja"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
sessionInfo()
library(tidyverse)
library(twitteR)
library(ROAuth)
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
knitr::opts_chunk$set(echo = TRUE)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "dMs3guHk4y6DDdztO0JDmUTqB"
consumerSecret <- "csna8h6XWQMd3ZppMBCUuNNXDTuBAVJLNK7QphZRCd5plkES0z"
accessToken <- "1240280636-PTXARRUrytYtijYXyPWKptD9cHSCMzlAujQkATI"
accessTokenSecret <- "uo8INEJbhhe43AIXfSs5veSZ6i7IHbh8Tn1LLlYTJqOm2"
handle <- "conjja"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
ls()
names(utLastDF)
names(usrs)
View(botDS)
botDS$statusCount <- 0
filter(latestStatDF$screenName %in% botDS$screenName) %>% botDS$statusCount <- latestStatDF$statusesCount
filter(latestStatDF$screenName %in% botDS$screenName)
which(latestStatDF$screenName %in% botDS$screenName)
which(latestStatDF$screenName %in% botDS$screenName) %>% botDS$statusCount[] <- latestStatDF$statusesCount
sessionInfo()
library(tidyverse)
filter(latestStatDF$screenName %in% botDS$screenName)
?filter
filter(latestStatDF, screenName %in% botDS$screenName)
filter(latestStatDF, screenName %in% botDS$screenName) %>% botDS$statusCount <- statusesCount
filter(latestStatDF, screenName %in% botDS$screenName) %>% botDS$statusCount <- latestStatDF$statusesCount
latestStatDF %>%
filter(screenName %in% botDS$screenName) %>% botDS$statusCount <- latestStatDF$statusesCount
?operator
help(operator)
??operator
sessionInfo()
botDS$statusCount <- latestStatDF$statusesCount[latestStatDF$screenName %in% botDS$screenName]
botDS$statusCount <- latestStatDF$statusesCount[latestStatDF$screenName == botDS$screenName]
?melt
install.packages(c("bookdown", "DT", "hms", "htmlTable", "htmlwidgets", "matrixStats", "microbenchmark", "Rcpp", "rstan", "sp", "sparklyr", "StanHeaders", "survey", "tibble", "TTR", "urltools", "usethis", "xml2"))
install.packages("fivethirtyeight")
??fivethirtyeight
indSC <- which(latestStatDF$screenName %in% botDS$screenName)
indSC
unique(indSC)
length(indSC)
unique(latestStatDF$screenName[indSC])
botDS$screenName == latestStatDF[indSC]
botDS[screenName == latestStatDF[indSC]]
sharedNames <- latestStatDF$screenName[indSC]
sharedNames
names(botDS)
botDS[1:12,]
botDS[,1:12]
names(botDS[,1:12])
names(botDS)
names(botDS[,1:12])
names(botDS[,1:13])
names(botDS)
botDS <- botDS[,1:13]
names(botDS)
?left_join
names(laes)
names(latestStatDF)
unique(latestStatDF$screenName)
left_join(botDS, latestStatDF[, c("screenNames", "statusesCount")], by = "screenName")
left_join(botDS, latestStatDF[, c("screenName", "statusesCount")], by = "screenName")
botDS <- left_join(botDS, latestStatDF[, c("screenName", "statusesCount")], by = "screenName")
View(botDS)
names(botDS)
botDS %>%
mean_time_between_tweets <- statusesCount/acct_age
botDS %>%
botDS$mean_time_between_tweets <- botDS$statusesCount/botDS%acct_age
botDS %>%
"mean_time_between_tweets" <- "statusesCount"/"acct_age""
botDS %>%
"mean_time_between_tweets" <- "statusesCount"/"acct_age"
str(botDS)
"mean_time_between_tweets" <- "statusesCount"/integer("acct_age")
botDS$mean_time_betwn_tweets
integer(botDS$acct_age)
class(botDS$acct_age)
"mean_time_between_tweets" <- "statusesCount"/as.numeric("acct_age")
str(botDS)
class(as.numeric(botDS$acct_age))
as.numeric(botDS$acct_age)
botDS$acct_age <- as.numeric(botDS$acct_age)
botDS %>%
"mean_time_between_tweets" <- "statusesCount"/"acct_age"
botDS %>%
mean_time_between_tweets <- statusesCount/acct_age
botDS %>%
botDS$mean_time_between_tweets <- botDS$statusesCount/botDS%acct_age
names(botDS)
botDS$mean_time_between_tweets <- botDS$statusesCount/botDS%acct_age
botDS$mean_time_betwn_tweets
botDS$statusesCount
botDS$acct_age
abs(botDS$acct_age)
botDS$acct_age <- abs(botDS$acct_age)
botDS$mean_time_between_tweets <- botDS$statusesCount/botDS%acct_age
botDS$mean_time_between_tweets = botDS$statusesCount/botDS%acct_age
botDS$mean_time_between_tweets = botDS$statusesCount/botDS$acct_age
botDS$mean_time_between_tweets
class(botDS$mean_time_between_tweets)
as.integer(botDS$mean_time_between_tweets)
names(latestStat)
lastTweet
names(lastTweet)
?difftime
botDS$acct_age <- anchorDate - botDS$julianCreated
class(botDS$acct_age)
as.numerc(botDS$acct_age, units = "mins" )
as.numeric(botDS$acct_age, units = "mins" )
abs(as.numeric(botDS$acct_age, units = "mins"))
botDS$acct_age <- abs(as.numeric(botDS$acct_age, units = "mins"))
botDS$mean_time_between_tweets = botDS$statusesCount/botDS$acct_age
botDS$mean_time_between_tweets
botDS$mean_time_between_tweets = botDS$acct_age/botDS$statusesCount
botDS$mean_time_between_tweets
View(botDS)
botDS$mean_time_betwn_tweets <-  botDS$mean_time_between_tweets
names(botDS)
botDS[,1:14]
names(botDS[,1:14])
botDS <- botDS[,1:14]
as.numeric(botDS$mean_time_betwn_tweets)
class(botDS$mean_time_betwn_tweets)
as.integer(botDS$mean_time_betwn_tweets)
botDS$mean_time_betwn_tweets <- as.integer(botDS$mean_time_betwn_tweets)
View(botDS)
names(latestStatDF)
str(latestStat)
?methods
latestStat$`15_margiecastro`$getUrl
latestStat$`15_margiecastro`$url
str(latestStat)
summary(botDS)
names(botDS)
shredBotDS <- botDS[, -1]
rownames(shredBotDS) <- botDS[,1]
shredBotDS
rowname(shredBotDS) <- botDS[,1]
rownames(shredBotDS) <- botDS[,1]
rownames(shredBotDS)
rownames(shredBotDS) <- botDS[,1]
shredBotDS <- botDS[, -1]
rownames(shredBotDS) <- botDS[,1]
rm(shredBotDS)
names(shredDF)
names(botDS)
names(latestStat)
names(latestStatDF)
tempDS <- left_join(botDS, latestStatDF[.c("followersCount", "friendsCount", "listedCount")])
library(tidyverse)
tempDS <- left_join(botDS, latestStatDF[.c("followersCount", "friendsCount", "listedCount")])
tempDS <- left_join(botDS, latestStatDF[,c("followersCount", "friendsCount", "listedCount")])
tempDS <- left_join(botDS, latestStatDF[,c("followersCount", "friendsCount", "listedCount")], by = "screenName")
tempDS <- left_join(botDS, latestStatDF[,c("screenName", followersCount", "friendsCount", "listedCount")], by = "screenName")
tempDS <- left_join(botDS, latestStatDF[,c("screenName", "followersCount", "friendsCount", "listedCount")], by = "screenName")
names(tempDS)
glimpse(tempDS)
botDS <- left_join(botDS, latestStatDF[,c("screenName", "followersCount", "friendsCount", "listedCount")], by = "screenName")
summary(botDS)
names(latestStatDF)
botDS <- left_join(botDS, latestStatDF[,c("screenName", "url", "location")], by = "screenName")
summary.data.frame(botDS)
names(latestStatDF)
class(latestStatDF$url)
str(latestStatDF)
str(latestStatDF[11])
str(latestStat)
str(latestStat[1])
names(botDS)
botDS[,-18]
names(botDS[,-18])
botDS <- names(botDS[,-18])
names(botDS)
botDS <- left_join(botDS, latestStatDF[,c("screenName", "followersCount", "friendsCount", "location" "listedCount")], by = "screenName")
botDS <- left_join(botDS, latestStatDF[,c("screenName", "followersCount", "friendsCount", "location", "listedCount")], by = "screenName")
library(tidyverse)
botDS <- left_join(botDS, latestStatDF[,c("screenName", "followersCount", "friendsCount", "location", "listedCount")], by = "screenName")
View(botDS)
?saveRDS
saveRDS(botDS, "capstone data/botDS")
saveRDS(botDS, "capstone dataset/botDS")
names(botDS)
tempDS <- botDS[, c(1, 6, 16, 15, 17:18, 3, 13, 4, 12, 7, 5, 8:11)]
View(tempDS)
names(latestStatDF)
names(tempDS)
tempDS[, -5]
names(tempDS[, -5])
tempDS <- tempDS[, -5]
names(tempDS)
names(botDS)
tempDS <- botDS[, c(1, 6, 14, 16, 15, 18, 3, 13, 4, 12, 7, 5, 8:11)]
names(tempDS)
tempDS <- botDS[, c(1, 6, 14, 16, 15, 18, 3, 13, 4, 12, 7, 9, 5, 8, 10, 11)]
names(tempDS)
tempDS <- botDS[, c(1, 6, 14, 16, 15, 18, 3, 12, 13, 4, 7, 9, 5, 8, 10, 11)]
names(tempDS)
botDS.20180129 <- botDS
summary.data.frame(tempDS[,-1])
summary.data.frame(tempDS[,-1:2])
summary.data.frame(tempDS[,-1])
tempDS$App
unique(tempDS$App)
tempDS$App.BoN
knitr::opts_chunk$set(echo = TRUE)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
install.packages("colorblindr")
install.packages(c("callr", "digest", "ggraph", "gutenbergr", "knitr", "mvtnorm", "quanteda", "reprex", "RGtk2", "subselect", "tidyr"))
install.packages(c("digest", "quanteda", "RGtk2"))
install.packages("digest")
install.packages("quanteda")
install.packages(c("digest", "quanteda", "RGtk2"))
install.packages("RGtk2", depen=T, type="source")
install.packages("quanteda", type = "source")
install.packages("digest")
devtools::install("eddelbuettel/digest")
?devtools::install_github
devtools::install("eddelbuettel/digest")
devtools::install("digest")
devtools::install_github("eddelbuettel/digest")
install.packages("RGtk2")
sessionInfo()
tempDS$acct_created
class(tempDS$acct_created)
cut(tempDS$acct_created, breaks = "month")
table(cut(tempDS$acct_created, breaks = "month"))
table(cut(tempDS$acct_created, breaks = "6 month"))
table(cut(tempDS$acct_created, breaks = "9 month"))
table(cut(tempDS$acct_created, breaks = "4 month"))
table(cut(tempDS$acct_created, breaks = "3 month"))
table(cut(tempDS$acct_created, breaks = "2 month"))
sessionInfo()
library(tidyverse)
table(cut(tempDS$acct_created, breaks = "2 month"))
