recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
str(recentTweetsDF)
names(recentTweetsDF)
??rm_between_multiple
knitr::opts_chunk$set(echo = TRUE)
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
??rm_between_multiple
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, AppURL, App, Count, BoN)
AppURL <- enquo(rm_between_multiple(recentTweetsDF$statusSource,"<",">"))
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
str(recentTweetsDF)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, AppURL, App, Count, BoN)
str(recentTweetsDF)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
#shredDF <- recentTweetsDF %>% select(screenName, AppURL, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created,
botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
#shredDF <- recentTweetsDF %>% select(screenName, AppURL, App, Count, BoN)
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
shredDF <- recentTweetsDF %>% select(screenName, AppURL, App, Count, BoN)
recentTweetsDF$AppURL <- unlist(AppURL)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
botAcctlist <- readRDS("capstone dataset/botAccilist")
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
str(botAcctlist)
botAcctlist
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
str(botAcctlist)
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
library(reticulate)
##  library(XML)
##  #path_to_python <- "/usr/local/bin/python3.6"
##  path_to_python <-
"/Library/Frameworks/Python.framework/Versions/3.6/bin/python3.6"
##  use_python(path_to_python)
##  dbot=import("debot")
##  db = dbot$DeBot('YocR3mKAc7U6hjKZrNnOCk2jjnWrqgSfwWYo8yOb') #This is my API key
##  cbots=htmlParse(db$get_related_bots('Charlottesville'))
I then parsed the XML data into a dataframe:
##  botlist <- xmlToList(cbots)
##  library(listviewer)
##  flatbot <- flatten(botlist)
##  flatterbot <- flatten(flatbot)
##  remove(flatbot)
##  flatbot <- flatten(flatterbot)
##  newBotlist <- unname(sapply(flatbot, `[`, 2))
Then using the _twitteR_ package, I got the userdata associated with the accounts.
##  library(twittR)
##  botAccts <- lookupUsers(newBotlist)
##  botAcctlist <- twListToDF(botAccts)
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
#tweeters <- unique(tweetsOPEN$screenName)
#length(tweeters)
botDS <- left_join(botDS, shredDF, by = "screenName")
botDS <- botDS[, c(1, 6, 14, 16, 15, 18, 3, 12, 13, 4, 7, 9, 5, 8, 10, 11)]
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
#tweeters <- unique(tweetsOPEN$screenName)
#length(tweeters)
botDS <- left_join(botDS, shredDF, by = "screenName")
botDS <- botDS[, c(1, 6, 14, 16, 15, 18, 3, 12, 13, 4, 7, 9, 5, 8, 10, 11)]
botDS <- left_join(botDS, shredDF, by = "screenName")
botDS <- botDS[, c(1, 6, 14, 16, 15, 18, 3, 12, 13, 4, 7, 9, 5, 8, 10, 11)]
str(recentTweetsDF)
botDS <- readRDS("capstone dataset/botDS")
shredDF <- readRDS("capstone dataset/shredDF")
str(botDS)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
#tweeters <- unique(tweetsOPEN$screenName)
#length(tweeters)
botDS <- left_join(botDS, shredDF, by = "screenName")
library(quanteda)
#using quanteda pkg
langDiv <- textstat_lexdiv(dfm(groupedTweetsDF$text))
botDS <- left_join(botDS, shredDF, by = "screenName")
groupedTweetsDF <- tweetsOPEN %>%
group_by(screenName) %>%
filter(screenName %in% botDS$screenName)
castoffDF <- setdiff(tweetsOPEN, groupedTweetsDF)
library(quanteda)
#using quanteda pkg
langDiv <- textstat_lexdiv(dfm(groupedTweetsDF$text))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = mean(langDiv))
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
#tweeters <- unique(tweetsOPEN$screenName)
#length(tweeters)
botDS <- left_join(botDS, shredDF, by = "screenName")
groupedTweetsDF <- tweetsOPEN %>%
group_by(screenName) %>%
filter(screenName %in% botDS$screenName)
castoffDF <- setdiff(tweetsOPEN, groupedTweetsDF)
library(quanteda)
#using quanteda pkg
langDiv <- textstat_lexdiv(dfm(groupedTweetsDF$text))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = mean(langDiv))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = rowmean(langDiv))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = rowMean(langDiv))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = rowMeans(langDiv))
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
#tweeters <- unique(tweetsOPEN$screenName)
#length(tweeters)
botDS <- left_join(botDS, shredDF, by = "screenName")
groupedTweetsDF <- tweetsOPEN %>%
group_by(screenName) %>%
filter(screenName %in% botDS$screenName)
castoffDF <- setdiff(tweetsOPEN, groupedTweetsDF)
library(quanteda)
#using quanteda pkg
langDiv <- textstat_lexdiv(dfm(groupedTweetsDF$text))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = rowMeans(langDiv, na.rm = TRUE))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = mean(as.numeric(langDiv)))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = rowMean(as.numeric(langDiv)))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = rowMeans(as.numeric(langDiv)))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = rowMeans(langDiv))
botDS <- left_join(botDS, botDiv)
botDS$langDiv <- botDS$meanDiv
#remove the meanDiv column for cleanup
accts <- unlist(botDS$screenName)
latestStat <- lookupUsers(accts)
library(twitteR)
#recreate latestStatDF code here where i get the latest statuses count for accounts to do mean_time_between_tweets variable
accts <- unlist(botDS$screenName)
latestStat <- lookupUsers(accts)
install.packages(c("document", "earth", "klaR", "magick", "plotmo", "spls", "tikzDevice", "tokenizers", "WVPlots"))
View(botDS)
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = mean(langDiv))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = mean(langDiv, na.rm = TRUE))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = mean(as.numeric(langDiv), na.rm = TRUE))
str(botDS)
saveRDS(botDS, "capstone dataset/botDS.21march")
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
#tweeters <- unique(tweetsOPEN$screenName)
#length(tweeters)
botDS <- left_join(botDS, shredDF, by = "screenName")
groupedTweetsDF <- tweetsOPEN %>%
group_by(screenName) %>%
filter(screenName %in% botDS$screenName)
castoffDF <- setdiff(tweetsOPEN, groupedTweetsDF)
library(quanteda)
#using quanteda pkg
langDiv <- textstat_lexdiv(dfm(groupedTweetsDF$text))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = mean(as.numeric(langDiv), na.rm = TRUE))
View(langDiv)
botDiv <- groupedTweetsDF %>%
group_by(screenName)
summarise(meanDiv = mean(langDiv[,-1]), na.rm = TRUE)
langDiv[,-1]
langDiv[-1,-1]
is.na(NaN)
is.na(Inf)
is.null(Inf)
is.numeric(NaN)
is.numeric(Inf)
is.finite(NaN)
is.finite(Inf)
-is.finite(Inf)
!is.finite(Inf)
langDiv[!is.finite()] <- NA
langDiv[where !is.finite()] <- NA
langDiv[!is.finite] <- NA
langDiv[!is.finite(x)] <- NA
langDiv[!is.finite(langDiv)] <- NA
langDiv[which(!is.finite(langDiv)] <- NA
langDiv[which(!is.finite(langDiv))] <- NA
langDiv[which(!is.finite())] <- NA
langDiv[which(is.finite)]
langDiv[which(is.finite())]
langDiv[which(is.finite(x))]
langDiv[which(is.finite(.))]
> langDiv[mapply(is.infinite, langDiv)] <- NA
sessionInfo()
> langDiv[mapply(!is.finite, langDiv)] <- NA
View(langDiv)
install.packages(c("janitor", "pmatch", "reticulate", "sf", "tidytext"))
install.packages("sf")
install.packages("rgdal", repos = "http://cran.us.r-project.org", type = "source")
install.packages("sf")
install.packages("rgdal", repos = "http://cran.us.r-project.org", type = "source")
install.packages("sf")
knitr::opts_chunk$set(echo = TRUE)
library(quanteda)
#using quanteda pkg
langDiv <- textstat_lexdiv(dfm(groupedTweetsDF$text))
botDiv <- groupedTweetsDF %>%
group_by(screenName)
botAcctlist <- readRDS("capstone dataset/botAcctlist")
names(botAcctlist)
botAcctlist$description <- iconv(botAcctlist$description, "latin1", "ASCII")
botAcctlist$name <- iconv(botAcctlist$name, "latin1", "ASCII")
str(botAcctlist)
library(tidyverse)
library(qdapRegex)
recentTweetsDF <- readRDS("capstone dataset/recentTweetsDF")
recentTweetsDF$text <- iconv(recentTweetsDF$text, "latin1", "ASCII")
AppURL <- rm_between_multiple(recentTweetsDF$statusSource,"<",">")
recentTweetsDF$App <- unlist(AppURL)
appcount <- recentTweetsDF %>%
group_by(App) %>%
summarize(Count=n()) %>%
arrange(desc(Count))
recentTweetsDF <- left_join(recentTweetsDF,appcount)
recentTweetsDF$BoN <- ifelse(recentTweetsDF$Count>4,0,1)
shredDF <- recentTweetsDF %>% select(screenName, App, Count, BoN)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
#tweeters <- unique(tweetsOPEN$screenName)
#length(tweeters)
botDS <- data.frame(botAcctlist$screenName, botAcctlist$id, botAcctlist$created, botAcctlist$statusesCount, langDiv = 0, mean_time_betwn_tweets = 0, bot = 0)
columnnames <- names(botDS)
columnnames[1] <- "screenName"
columnnames[2] <- "ID"
columnnames[3] <- "acct_created"
columnnames[4] <- "statusesCount"
colnames(botDS) <- columnnames
tweetsRT <- filter(recentTweetsDF, isRetweet == "TRUE")
tweetsOPEN <- filter(recentTweetsDF, isRetweet != "TRUE")
#tweeters <- unique(tweetsOPEN$screenName)
#length(tweeters)
botDS <- left_join(botDS, shredDF, by = "screenName")
groupedTweetsDF <- tweetsOPEN %>%
group_by(screenName) %>%
filter(screenName %in% botDS$screenName)
castoffDF <- setdiff(tweetsOPEN, groupedTweetsDF)
library(quanteda)
#using quanteda pkg
langDiv <- textstat_lexdiv(dfm(groupedTweetsDF$text))
langDiv[which(!is.finite())] <- NA
install.packages(c("blob", "listviewer", "plogr", "pROC", "randomForest", "servr", "sf", "snakecase"))
names(botDS)
