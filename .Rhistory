?left_join
left_join(ctvDS, ctvDS, by = "screenName")
head(left_join(ctvDS, CTVsub, by = "screenName"))
unique(ctvDS$screenName)
emme <- left_join(ctvDS, CTVsub, by = "screenName")
aggregate(emme$screenName)
?aggregate
?bind
emme <- CTVstats$screenName
enne <- ctvDS$screenName
diff(emme, enne)
?diff
setdiff(emme, enne)
sessionInfo()
library(dplyr)
library(lubridate)
library(tidyverse)
install.packages(c("awsMethods", "brglm2", "callr", "dendextend", "fivethirtyeight", "matrixStats", "RGtk2", "tseries"))
CTVsub %>% group_by(screenName)
emme <- left_join(ctvDS, as.data.frame(CTVsub), by = "screenName")
rm(emme)
as.data.frame(CTVsub)
head(as.data.frame(CTVsub))
head(CTVsub)
?bind
bind_cols(ctvDS, CTVsub)
CTVbnd <- bind_cols(ctvDS, CTVsub)
View(CTVbnd)
saveRDS(CTVbnd, "capstone dataset/CTVbnd")
names(CTVbnd)
CTVbnd[screenName != screenName1]
CTVbnd[select screenName != screenName1]
CTVbnd[(select screenName != screenName1)]
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screenName1)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$account_created_at)
shredCTV <- CTVbnd[, c(1:12, 14:17)]
View(shredCTV)
names(botDS)
names(shredCTV)
saveRDS(shredCTV, "capstone dataset/shredCTV")
shredCTV <- shredCTV[, c(1,2,16,14,13,15,3,4,5,6,7,8,9,10,11,12)]
names(shredCTV)
names(botDS)
botDS <- botDS[,-11]
names(botDS)
names(shredCTV)
botnames <- names(botDS)
colnames(shredCTV)
colnames(shredCTV) <- botnames
names(shredCTV)
names(botDS)
saveRDS(shredCTV, "capstone dataset/shredCTV")
?right_join
?join
?bind
head(shredCTV)
shredCTV$mean_time_between_tweets = as.integer(shredCTV$acct_age/shredCTV$statusesCount)
View(shredCTV)
shredCTV$mean_time_betwn_tweets = as.integer(shredCTV$acct_age/shredCTV$statusesCount)
names(shredCTV)
shredCTV <- shredCTV[,-17]
names(shredCTV)
View(CTV)
names(CTV)
names(ctvDS)
appCTV  <- CTV[, c(4,6)]
name(appcount)
name(appCTV)
names(appCTV)
str(appCTV)
shredCTV$App <- CTV$source
View(shredCTV)
appcount <- shredCTV%>%group_by(App)%>%summarize(Count=n())%>%arrange(desc(Count))
appcount
appcntCTV <- appcount
appcount <- tweetsdf%>%group_by(App)%>%summarize(Count=n())%>%arrange(desc(Count))
saveRDS(shredCTV, "capstone dataset/shredCTV")
View(appcntCTV)
sessionInfo()
library(tidyverse)
library(lubridate)
rm(emme)
rm(appcount)
names(contect)
names(content)
content
rm(content)
rm(descr.tagged.text)
rm(myapp)
rm(req)
rm(tagged.text)
rm(tagged2.text)
name(sorteduDF)
names(sorteduDF)
sorteduDF$text
rm(sorteduDF)
name(tweetSrc)
names(tweetSrc)
tweetSrc$screenName
rm(c(acctNames, accts, columnnames))
rm(c("acctNames", "accts", "columnnames"))
rm(acctNames)
rm(accts)
rm(sharedNames)
rm(st)
names(shredDF)
knitr::opts_chunk$set(echo = TRUE)
CTVsub <- CTVstats[, c(3, 8:11, 13, 21)]
CTVbnd <- bind_cols(ctvDS, CTVsub)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screenName1)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$account_created_at)
CTVbnd <- bind_cols(ctvDS, CTVsub)
readRDS("capstone dataset/ctvDS", ctvDS)
ctvDS <- data.frame(CTV$screen_name, CTV$bot, CTV$acct_created, CTV$acct_created, "julianCreated", "acct_age", CTV$langDiv, "Count", "mean_time_betwn_tweets", "App", "App.BoN", "mCount", "Month")
CTV$langDiv <- divMeans
divMeans <- rowMeans(divLang, na.rm = TRUE)
CTV$langDiv <- divMeans
ctvDS <- data.frame(CTV$screen_name, CTV$bot, CTV$acct_created, CTV$acct_created, "julianCreated", "acct_age", CTV$langDiv, "Count", "mean_time_betwn_tweets", "App", "App.BoN", "mCount", "Month")
ctvnames <- names(ctvDS)
ctvnames[1] <- "screenName"
ctvnames[2] <- "bot"
ctvnames[3] <- "acct_created"
ctvnames[4] <- "julianCreated"
ctvnames[5] <- "acct_age"
ctvnames[6] <- "langDiv"
ctvnames[7] <- "Count"
ctvnames[8] <- "mean_time_betwn_tweets"
ctvnames[9] <- "App"
ctvnames[10] <- "App.BoN"
ctvnames[11] <- "mCount"
ctvnames[12] <- "Month"
colnames(ctvDS)
colnames(ctvDS) <- ctvnames
CTVsub <- CTVstats[, c(3, 8:11, 13, 21)]
CTVbnd <- bind_cols(ctvDS, CTVsub)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screenName1)
CTVbnd <- bind_cols(ctvDS, CTVsub)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screenName1)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$account_created_at)
names(shredCTV)
shredCTV <- CTVbnd[, c(1:12, 14:17)]
#get the order of the columns for both DFs
names(botDS)
names(shredCTV)
#correct and set order for shredCTV
shredCTV <- shredCTV[, c(1,2,16,14,13,15,3,4,5,6,7,8,9,10,11,12)]
names(shredCTV)
names(botDS)
botDS <- botDS[,-11]
names(botDS)
names(shredCTV)
botnames <- names(botDS)
colnames(shredCTV)
colnames(shredCTV) <- botnames
names(shredCTV)
names(botDS)
shredCTV$mean_time_betwn_tweets = as.integer(shredCTV$acct_age/shredCTV$statusesCount)
shredCTV$acct_age/shredCTV$statusesCount
str(shredCTV)
shredCTV$mean_time_betwn_tweets = as.integer(shredCTV$acct_age/shredCTV$statusesCount)
CTVbnd <- bind_cols(ctvDS, CTVsub)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screenName1)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$account_created_at)
shredCTV <- CTVbnd[, c(1:12, 14:17)]
#get the order of the columns for both DFs
names(botDS)
names(shredCTV)
#correct and set order for shredCTV
shredCTV <- shredCTV[, c(1,2,16,14,13,15,3,4,5,6,7,8,9,10,11,12)]
names(shredCTV)
names(botDS)
botDS <- botDS[,-11]
names(botDS)
readRDS("capstone dataset/botDS", botDS)
getwd()
readRDS("capstone dataset/botDS.20180129", botDS)
names(botDS)
names(tempDS)
View(botDS)
botDS <- tempDS
botDS$acct_created <- ymd_hms(botDS$acct_created)
sessionInfo()
options(scipen = 999)
View(botDS)
readRDS("botDS", emme)
readRDS("botDS", zed)
names(zed)
zed <- readRDS("botDS")
names(zed)
View(botDS)
View(botDS.20180129)
botDS$acct_created <- botDS.20180129$acct_created
botDS <- botDS[,-11]
names(botDS)
names(shredCTV)
saveRDS("capstone dataset/botDS", botDS)
saveRDS(botDS, "capstone dataset/botDS")
View(shredCTV)
View(CTVbnd)
CTVsub <- CTVstats[, c(3, 8:11, 13, 21)]
CTVbnd <- bind_cols(ctvDS, CTVsub)
View(CTVbnd)
View(CTVsub)
View(ctvDS)
ctvDS <- data.frame(CTV$screen_name, CTV$bot, CTV$acct_created, "julianCreated", "acct_age", CTV$langDiv, "Count", "mean_time_betwn_tweets", "App", "App.BoN", "mCount", "Month")
ctvnames <- names(ctvDS)
ctvnames[1] <- "screenName"
ctvnames[2] <- "bot"
ctvnames[3] <- "acct_created"
ctvnames[4] <- "julianCreated"
ctvnames[5] <- "acct_age"
ctvnames[6] <- "langDiv"
ctvnames[7] <- "Count"
ctvnames[8] <- "mean_time_betwn_tweets"
ctvnames[9] <- "App"
ctvnames[10] <- "App.BoN"
ctvnames[11] <- "mCount"
ctvnames[12] <- "Month"
ctvDS$acct_age <- abs(as.numeric(ctvDS$acct_age, units = "mins"))
colnames(ctvDS)
colnames(ctvDS) <- ctvnames
View(ctvDS)
CTVbnd <- bind_cols(ctvDS, CTVsub)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screenName1)
View(CTVbnd)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screen_name)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$account_created_at)
shredCTV <- CTVbnd[, c(1:12, 14:17)]
#get the order of the columns for both DFs
names(botDS)
names(shredCTV)
#correct and set order for shredCTV
shredCTV <- shredCTV[, c(1,2,16,14,13,15,3,4,5,6,7,8,9,10,11,12)]
names(shredCTV)
names(botDS)
shredCTV <- shredCTV[,-16]
names(shredCTV)
names(botDS)
names(shredCTV)
botnames <- names(botDS)
colnames(shredCTV)
colnames(shredCTV) <- botnames
names(shredCTV)
names(botDS)
difftime(anchorDate - shredCTV$julianCreated, units = "mins")
difftime(anchorDate - shredCTV$julianCreated)
shredCTV$julianCreated <- julian(shredCTV$acct_created, origin = as.Date("1970-01-01"))
difftime(anchorDate - shredCTV$julianCreated, units = "mins")
shredCTV$acct_age <- anchorDate - shredCTV$julianCreated
CTVbnd$acct_age <- anchorDate - CTVbnd$julianCreated
CTVbnd$acct_age <- 0
CTVbnd$acct_age <- anchorDate - CTVbnd$julianCreated
CTVbnd$acct_age <- as.integer(anchorDate - CTVbnd$julianCreated)
shredCTV$acct_age <- abs(anchorDate - shredCTV$julianCreated)
View(shredCTV)
shredCTV$Count <- 0
shredCTV$mean_time_betwn_tweets <- 0
shredCTV$mCount <- 0
View(shredCTV)
CTV$source
shredCTV$App <- CTV$source
View(shredCTV)
shredCTV$App.BoN <- 0
shredCTV$mean_time_betwn_tweets = as.integer(shredCTV$acct_age/shredCTV$statusesCount)
View(shredCTV)
as.integer(shredCTV$acct_age/shredCTV$statusesCount)
View(shredCTV)
View(ctvDS)
ctvDS$julianCreated <- 0
ctvDS$acct_age <- 0
ctvDS$Count <- 0
ctvDS$mean_time_betwn_tweets <- 0
ctvDS$App <- CTV$source
ctvDS$App.BoN <- 0
ctvDS$mCount <- 0
ctvDS <- ctvDS[,-16]
View(ctvDS)
ctvDS <- ctvDS[,-12]
saveRDS(ctvDS, "capstone dataset/ctvDS")
rowMeans(divLang, na.rm = TRUE)
saveRDS(ctvDS, "capstone dataset/ctvDS")
ctvDS %>%
divLang
divLang[mapply(is.nan, divLang)] <- NA
divLang[mapply(is.infinite, divLang)] <- NA
divLang
divMeans
divMeans <- rowMeans(divLang, na.rm = TRUE)
ctvDS$langDiv <- divMeans
ctvDS$julianCreated <-julian(ctvDS$acct_created, origin = as.Date("1970-01-01"))
View(ctvDS)
difftime(anchorDate - ctvDS$julianCreated, units = "mins")
difftime(anchorDate - ctvDS$julianCreated)
sessionInfo()
ctvDS$acct_age <- anchorDate - ctvDS$julianCreated
View(ctvDS)
ctvDS$acct_age <- abs(anchorDate - ctvDS$julianCreated)
ctvDS$acct_age <- abs(as.numeric(ctvDS$acct_age, units = "mins"))
ctvDS$mean_time_betwn_tweets = as.integer(ctvDS$acct_age/ctvDS$statusesCount)
ctvnames <- names(ctvDS)
names(ctvDS)
CTVsub <- CTVstats[, c(3, 8:11, 13, 21)]
CTVbnd <- bind_cols(ctvDS, CTVsub)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screen_name)
View(CTVbnd)
View(CTVsub)
names(CTVstats)
CTVsub <- CTVstats[, c(3, 8:11, 21)]
CTVbnd <- bind_cols(ctvDS, CTVsub)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screen_name)
View(CTVbnd)
sessionInfo()
library(tidyverse)
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$account_created_at)
ymd_hms(CTVbnd$account_created_at)
CTVbnd$acct_created1 <- ymd_hms(CTVbnd$acct_created1)
CTVbnd$acct_created <- ymd_hms(CTVbnd$acct_created)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$account_created_at)
#check that the bind worked as desired
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screen_name)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$acct_created1)
CTVbnd %>% filter(CTVbnd$screenName != CTVbnd$screen_name)
CTVbnd %>% filter(CTVbnd$acct_created != CTVbnd$acct_created1)
shredCTV <- CTVbnd[, c(1:12, 14:17)]
#get the order of the columns for both DFs
names(botDS)
names(shredCTV)
#correct and set order for shredCTV
shredCTV <- shredCTV[, c(1,2,16,14,13,15,3,4,5,6,7,8,9,10,11,12)]
names(shredCTV)
names(botDS)
shredCTV <- CTVbnd[, c(1:12, 13, 14:17)]
#correct and set order for shredCTV
shredCTV <- shredCTV[, c(1,2,16,14,13,15,3,4,5,6,7,8,9,10,11,12)]
names(shredCTV)
names(botDS)
shredCTV <- shredCTV[, -16]
names(shredCTV)
names(botDS)
botnames <- names(botDS)
colnames(shredCTV)
colnames(shredCTV) <- botnames
names(shredCTV)
names(botDS)
View(shredCTV)
shredCTV$mean_time_betwn_tweets = as.integer(shredCTV$acct_age/shredCTV$statusesCount)
saveRDS(shredCTV, "capstone dataset/shredCTV")
View(methodCount)
View(botDS)
options(scipen = 999)
botDS$mean_time_betwn_tweets[mapply(is.infinite, botDS$mean_time_betwn_tweets)] <- NA
shredCTV$mean_time_betwn_tweets = shredCTV$acct_age/shredCTV$statusesCount
View(shredCTV)
appcount <- shredCTV%>%group_by(App)%>%summarize(Count=n())%>%arrange(desc(Count))
View(appcount)
left_join(shredCTV, appcount)
left_join(shredCTV, appcount, by = "App")
shredCTV <- left_join(shredCTV, appcount, by = "App")
shredCTV$Count.x <- shredCTV$Count.y
names(shredCTV)
colnames(shredCTV[11]) <- "Count"
names(shredCTV)
shredCTV <- shredCTV[,=16]
shredCTV <- shredCTV[,-16]
s.names  < -names(shredCTV)
s.names <- names(shredCTV)
s.names[11]
s.names[11] <- "Count"
s.names[11]
names(shredCTV)
s.names
colnames(shredCTV) <- s.names
View(shredCTV)
names(botDS)
names(botDS[, 1:10, 12, 11, 13:15])
names(botDS[, c(1:10, 12, 11, 13:15)])
names(botDS[, c(1:10, 12, 13, 11, 14, 15)])
botDS <- botDS[, c(1:10, 12, 13, 11, 14, 15)]
shredCTV <- shredCTV[, c(1:10, 12, 13, 11, 14, 15)]
names(shredCTV)
saveRDS(shredCTV, "capstone dataset/shredCTV")
saveRDS(botDS, "capstone dataset/botDS")
View(shredCTV)
View(methodCount)
View(usr_df)
View(CTV)
CTV %>% group_by(screen_name) %>% unique(App)
CTV %>% group_by(screen_name) %>% summarise(count=n())
methodCountCTV  <- CTV %>% group_by(screen_name) %>% summarise(count=n())
left_join(shredCTV, methodCountCTV)
left_join(shredCTV, methodCountCTV, by = c("screenName" = "screen_name"))
shredCTV <- left_join(shredCTV, methodCountCTV, by = c("screenName" = "screen_name"))
str(methodCountCTV)
str(shredCTV)
emme <- left_join(shredCTV, methodCountCTV, by = c("screenName" = "screen_name"))
head(emme)
View(shredCTV)
shredCTV$mCount <- shredCTV$count
names(shredCTV)
shredCTV <- shredCTV[, -16]
CTV %>% group_by(screen_name) %>% summarise(count=n())
rm(emme)
CTV %>% group_by(screen_name) %>% unique(App)
CTV %>% group_by(screen_name)
shredCTV %>% group_by(screen_name)
shredCTV %>% group_by(screenName)
shredCTV %>% group_by(screenName) %>% count=n(App)
shredCTV %>% group_by(screenName) %>% n(App)
?n
shredCTV %>% group_by(screenName) %>% summarise(App, n())
?summarise
shredCTV %>% group_by(screenName) %>% summarise(App)
shredCTV %>% group_by(screenName) %>% App[n()]
names(shredCTV)
shredCTV %>% group_by(screenName) %>% arrange(App)
shredCTV %>% group_by(screenName) %>% arrange(App) %>% n()
shredCTV %>% group_by(screenName) %>% arrange(App) %>% summarise(count=n())
emme <- shredCTV %>% group_by(screenName) %>% arrange(App) %>% summarise(count=n())
emme
View(emme)
rm(emme)
emme <- shredCTV %>% group_by(screenName) %>% arrange(App)
View(emme)
methCount <- shredCTV %>% group_by(screenName) %>% summarise(mCount=n())
View(methCount)
methCount <- shredCTV %>% group_by(screenName) %>% group_by(App) %>% summarise(mCount=n())
View(methCount)
methCount <- shredCTV %>% group_by(App) %>% group_by(screenName) %>% summarise(mCount=n())
?group_by
shredCTV %>% group_by(screenName, App) %>% summarise(count=n())
emme <- shredCTV %>% group_by(screenName, App) %>% summarise(count=n())
View(emme)
emme <- shredCTV %>% group_by(screenName, App) %>% summarise(count=n()) %>% summarise()
View(emme)
emme <- shredCTV %>% group_by(screenName, App) %>% summarise(count=n()) %>% n()
emme <- shredCTV %>% group_by(screenName, App) %>% summarise(count=n()) %>% n(screenName)
methodCountCTV <- shredCTV %>% group_by(screenName, App) %>% summarise(count=n())
rm(emme)
View(methodCountCTV)
left_join(shredCTV, methodCountCTV, by = c("screenName", "App"))
shredCT <- left_join(shredCTV, methodCountCTV, by = c("screenName", "App"))
names(shredCTV)
names(shredCT)
shredCTV <- left_join(shredCTV, methodCountCTV, by = c("screenName", "App"))
rm(shredCT)
names(shredCTV)
shredCTV$mCount <- shredCTV$count
shredCTV <- shredCTV[,-16]
saveRDS(shredCTV, "capstone dataset/shredCTV")
sessionInfo()
library(tidyverse)
library(lubridate)
names(botDS)
names(shredCTV)
unique(botDS$screenName)
length(botDS$screenName)
range(shredCTV$mCount)
unique(shredCTV$mCount)
median(shredCTV$mCount)
arrange(shredCTV$mCount)
ascending(shredCTV$mCount)
desc(shredCTV$mCount)
?desc
desc(shredCTV$mCount)
?median
?arrange
median(unique(shredCTV$mCount))
botDS$Count
names(botDS)
View(botDS)
View(methodCount)
View(groupedTweetsDF)
View(tweetSrc)
View(tweet)
View(methodCount)
median(unique(shredCTV$mCount))
unique(shredCTV$mCount)
View(lastTweet)
View(botDS.20180129)
botDS$mCount
unique(botDS$mCount)
AppURL
library(qdapRegex)
View(CTV)
View(CTVsub)
View(appcount)
names(appcount)
range(appcount$Count)
unique(appcount$Count)
unique(shredCTV$Count)
shredCTV$App.BoN <- ifelse(shredCTV$Count >4,0,1)
View(shredCTV)
saveRDS(shredCTV, "capstone dataset/shredCTV")
options(scipen = 999)
View(shredCTV)
shredCVL <- bind_rows(botDS, shredCTV)
names(shredCVL)
View(shredCVL)
saveRDS(shredCVL, "capstone dataset/shredCVL")
library(GGally)
ggpairs(shredCVL[,-1])
unique(shredCVL$App)
